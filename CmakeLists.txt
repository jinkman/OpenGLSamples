# 最低指定的CMake版本
cmake_minimum_required(VERSION 3.0)

# 括号里面填你的工程名
PROJECT(OpenGLSamples)

if(NOT WIN32)
	set(CMAKE_CXX_STANDARD 17)
endif()

add_compile_definitions(_HAS_TRI_NAMESPACE)

if (CMAKE_CL_64)
    # 设置 可执行程序输出目录
	set(bin_debug 			${CMAKE_BINARY_DIR}/bin/x64/debug64)
	set(bin_release 		${CMAKE_BINARY_DIR}/bin/x64/release64)
# 32
else()
 # 设置 可执行程序输出目录
	set(bin_debug 			${CMAKE_BINARY_DIR}/bin/x86/debug)
	set(bin_release 		${CMAKE_BINARY_DIR}/bin/x86/release)
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG 	${bin_debug})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE 	${bin_release})

set(third-party-path ${CMAKE_CURRENT_SOURCE_DIR}/third-party)
set(data-path ${CMAKE_CURRENT_SOURCE_DIR}/data)

ADD_SUBDIRECTORY(${third-party-path}/assimp)
ADD_SUBDIRECTORY(${third-party-path}/glfw)
ADD_SUBDIRECTORY(${third-party-path}/glm)
ADD_SUBDIRECTORY(${third-party-path}/soil)
ADD_SUBDIRECTORY(${third-party-path}/freetype)

list(APPEND INCLUDES_DIR ${third-party-path}/assimp/include)
list(APPEND INCLUDES_DIR ${third-party-path}/glfw/include)
list(APPEND INCLUDES_DIR ${third-party-path}/glm/include)
list(APPEND INCLUDES_DIR ${third-party-path}/soil/include)
list(APPEND INCLUDES_DIR ${third-party-path}/freetype/include)

list(APPEND INCLUDES_DIR ${third-party-path}/glad/include)
list(APPEND INCLUDES_DIR ${CMAKE_CURRENT_SOURCE_DIR}/samples/common)

set(glad-c ${CMAKE_CURRENT_SOURCE_DIR}/third-party/glad/src/glad.c)
set(stbimage-c ${CMAKE_CURRENT_SOURCE_DIR}/samples/common/stb_image.cpp)

file(GLOB_RECURSE  SRC_TEST_CPP_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/samples/*Test.cpp)


foreach(TEST_CPP_DIR ${SRC_TEST_CPP_DIRS})
	string(REGEX REPLACE ".*/\(.*\)" "\\1" SUFFIX ${TEST_CPP_DIR})
	string(REGEX REPLACE "/${SUFFIX}" "" SRC_DIR ${TEST_CPP_DIR})
	list(APPEND SRC_DIRS ${SRC_DIR})
endforeach()

set(DATA_PATH ${data-path}/)

configure_file(
        "${CMAKE_CURRENT_SOURCE_DIR}/samples/common/Config.h.in"
        "${CMAKE_CURRENT_SOURCE_DIR}/samples/common/Config.h"
)

foreach(SRC_DIR ${SRC_DIRS})
	file(GLOB_RECURSE  SRC_CPP ${SRC_DIR}/*.cpp ${SRC_DIR}/*.c)
	file(GLOB_RECURSE  SRC_H ${SRC_DIR}/*.h ${SRC_DIR}/*.hpp)

	string(REGEX REPLACE ".*/\(.*\)" "\\1" SRC ${SRC_DIR})
	string(REGEX REPLACE "/${SRC}" "" PRO_DIR ${SRC_DIR})
	string(REGEX REPLACE ".*/\(.*\)" "\\1" PRO_NAME ${PRO_DIR})

	add_executable(${PRO_NAME}
		${SRC_CPP}
		${SRC_H}
		${glad-c}
		${stbimage-c}
	)
	target_include_directories(${PRO_NAME} 
		PUBLIC
		${INCLUDES_DIR}
	)

	target_link_libraries(${PRO_NAME} 
		PRIVATE
		assimp
		glfw
		glm
		soil
		freetype
	)
endforeach()


